include required(classpath("application"))

backend {
  default = "LSF"
  providers {
    LSF {
      actor-factory = "cromwell.backend.impl.sfs.config.ConfigBackendLifecycleActorFactory"
      config {
        root = "{{RUNS_DIR}}"
        runtime-attributes = """
        Int cpu = 1
        Int memory_gb = 4
        String? docker
        """

        submit-docker = """
        LSF_DOCKER_PRESERVE_ENVIRONMENT=false LSF_DOCKER_PORTS='' LSF_DOCKER_VOLUMES='${cwd}:${docker_cwd} {{LSF_DOCKER_VOLUMES}}' \
        bsub \
        -J ${job_name} \
        -cwd ${cwd} \
        -oo {{LOGS_DIR}}/%J.out \
        -q '{{LSF_QUEUE}}' \
        -G '{{LSF_JOB_GROUP}}' \
        -g '{{LSF_USER_GROUP}}' \
        -a "docker(${docker})" \
        -M ${memory_gb}G \
        -n ${cpu} \
        -R "span[hosts=1] select[mem>${memory_gb}G] rusage[mem=${memory_gb}G]" \
        /bin/bash ${script}
        """

        kill = "bkill ${job_id}"
        docker-kill = "bkill ${job_id}"
        check-alive = "bjobs -noheader -o stat ${job_id} | /bin/grep 'PEND\\|RUN'"
        job-id-regex = "Job <(\\d+)>.*"
      }
    }
  }
}

webservice {
  port = {{SERVER_PORT}}
}

workflow-options {
  workflow-log-dir = "{{RUNS_DIR}}"
}

call-caching {
  enabled = true
  invalidate-bad-cache-results = true
}

database {
  profile = "slick.jdbc.HsqldbProfile$"
  db {
    driver = "org.hsqldb.jdbcDriver"
    url = """
    jdbc:hsqldb:file:{{DB_DIR}}/db;
    shutdown=false;
    hsqldb.default_table_type=cached;hsqldb.tx=mvcc;
    hsqldb.result_max_memory_rows=10000;
    hsqldb.large_data=true;
    hsqldb.applog=1;
    hsqldb.lob_compressed=true;
    hsqldb.script_format=3
    """
    connectionTimeout = 120000
    numThreads = 1
   }
}
